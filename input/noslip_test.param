#-----CLASS v2.4.4 (branch: hi_class, hash: 08dadaeafa2e77142b80bb3d7ff2c49cf7875f6b)-----
# This is for no slip gravity

#------Experiments to test (separated with commas)-----

data.experiments=['Planck_highl','Planck_lowl','Planck_lensing']

#------ Settings for the over-sampling. The first element will always be set to
# 1, for it is the sampling of the cosmological parameters. The other numbers
# describe the over sampling of the nuisance parameter space. This array must
# have the same dimension as the number of blocks in your run (so, 1 for
# cosmological parameters, and then 1 for each experiment with varying nuisance
# parameters).
data.over_sampling=[1, 4]

#------ Parameter list -------

# data.parameters[class name] = [mean, min, max, 1-sigma, scale, role]
# - if min max irrelevant, put to -1
# - if fixed, put 1-sigma to 0
# - if scale irrelevant, put to 1, otherwise to the appropriate factor
# - role is either 'cosmo' or 'nuisance'

# Cosmological parameters list

data.parameters['omega_b']      = [ 2.2253,   None, None,  0.028, 0.01, 'cosmo']
data.parameters['omega_cdm']    = [0.11919,   None, None, 0.0027,    1, 'cosmo']
data.parameters['100*theta_s']  = [ 1.0418,   None, None,   3e-4,    1, 'cosmo']
data.parameters['ln10^{10}A_s'] = [ 3.0753,   None, None, 0.0029,    1, 'cosmo']
data.parameters['n_s']          = [0.96229,   None, None, 0.0074,    1, 'cosmo']
data.parameters['tau_reio']     = [0.09463,   0.04, None,  0.013,    1, 'cosmo']

# Expansion history: Omega_0, w, Omega_ede
data.cosmo_arguments['expansion_model'] = 'lcdm'
# Not sure what to do here?
data.cosmo_arguments['Omega_Lambda'] = 0.
data.cosmo_arguments['Omega_fld'] = 0.
data.cosmo_arguments['Omega_smg'] = -1.

# BS-alphas: kineticity, braiding, running, tensors, M2_ini
data.cosmo_arguments['gravity_model'] = 'no_slip'
# This is c_k, set to 0
data.parameters['parameters_smg__1'] = [0.,  None, None, 0., 1, 'cosmo'] 
# This is c_m, so we should vary over it!
data.parameters['parameters_smg__2'] = [0.,  None, None, 0., 1, 'cosmo'] 
# This is a_t, set to 0.5.
data.parameters['parameters_smg__3'] = [0.5, None, None, 0., 1, 'cosmo'] 
# This is tau, set to 1.
data.parameters['parameters_smg__4'] = [1.0, None, None, 0., 1, 'cosmo']
# This is M_*,ini, set to 1.
data.parameters['parameters_smg__5'] = [1.0, None,None, 0., 1, 'cosmo'] 

#conservative precision parameters for the run
# What is this?
data.cosmo_arguments['start_small_k_at_tau_c_over_tau_h'] = 1e-4
data.cosmo_arguments['start_large_k_at_tau_h_over_tau_k'] = 1e-4
data.cosmo_arguments['perturb_sampling_stepsize'] = 0.05
data.cosmo_arguments['l_logstep'] = 1.045
data.cosmo_arguments['l_linstep'] = 50
data.cosmo_arguments['kineticity_safe_smg'] = 1.e-5

# Nuisance parameter list, same call, except the name does not have to be a class name

data.parameters['A_cib_217']         = [     61,    0,  200,     7,     1,'nuisance']   
data.parameters['cib_index']         = [   -1.3, -1.3, -1.3,     0,     1,'nuisance']   
data.parameters['xi_sz_cib']         = [   0.13,    0,    1,   0.3,     1,'nuisance']	 
data.parameters['A_sz']              = [   6.86,    0,   10,   1.9,     1,'nuisance'] 			      
data.parameters['ps_A_100_100']      = [  222.9,    0,  400,    30,     1,'nuisance'] 			      
data.parameters['ps_A_143_143']      = [     38,    0,  400,     8,     1,'nuisance'] 			      
data.parameters['ps_A_143_217']      = [   35.2,    0,  400,    10,     1,'nuisance'] 			      
data.parameters['ps_A_217_217']      = [  102.6,    0,  400,    11,     1,'nuisance'] 			      
data.parameters['ksz_norm']          = [      0,    0,   10,   4.2,     1,'nuisance'] 			      
data.parameters['gal545_A_100']      = [   6.75,    0,   50,   1.8,     1,'nuisance']   
data.parameters['gal545_A_143']      = [   9.41,    0,   50,   1.8,     1,'nuisance']   
data.parameters['gal545_A_143_217']  = [  19.28,    0,  100,   4.2,     1,'nuisance']   
data.parameters['gal545_A_217']      = [   81.7,    0,  400,   7.9,     1,'nuisance']   
data.parameters['calib_100T']        = [ 998.59,    0, 3000,  0.73, 0.001,'nuisance']  
data.parameters['calib_217T']        = [ 995.89,    0, 3000,   1.4, 0.001,'nuisance']  
data.parameters['A_planck']          = [100.028,   90,  110,  0.25,  0.01,'nuisance']  

# Derived parameters

data.parameters['z_reio']          = [1, None, None, 0,     1,   'derived']
data.parameters['Omega_Lambda']    = [1, None, None, 0,     1,   'derived']
data.parameters['YHe']             = [1, None, None, 0,     1,   'derived']
data.parameters['H0']              = [0, None, None, 0,     1,   'derived']
data.parameters['A_s']             = [0, None, None, 0,  1e-9,   'derived']
data.parameters['sigma8']          = [0, None, None, 0,     1,   'derived']


#------ Mcmc parameters ----

data.N=10
data.write_step=5
